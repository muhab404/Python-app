name: CI Pipeline

on:
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/**"          
      - "app/**"          
      - "Dockerfile"     
      - "run.py"     
      - "requirements.txt"      
         
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/**"          
      - "app/**"         
      - "Dockerfile"      
      - "run.py"      
      - "requirements.txt"      
       
  workflow_dispatch:

jobs:

  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 bandit

    - name: Run Flake8 (lint)
      run: flake8 .

    - name: Run Bandit (security scan)
      run: bandit -r .
    - name: Trivy FS scan
      uses: aquasecurity/trivy-action@0.14.0
      with:
        scan-type: fs
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        path: .



  build-and-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: aws-actions/amazon-ecr-login@v2
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Trivy Image scan
        uses: aquasecurity/trivy-action@0.14.0
        with:
          image-ref: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          
  push-to-ecr:
    runs-on: ubuntu-latest
    needs: build-and-scan
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: aws-actions/amazon-ecr-login@v2
      - run: |
          IMAGE_TAG=${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest